# Snakefile

configfile: "config.yaml"

rule all:
    input:
        expand(config["filtered_chr_dir"] + "/" + "filtered_chr{chr}.bed", chr=config["CHR"])

# Step 1: Filter SNP List per Ancestry
rule filter_snplist_per_ancestry:
    input:
        bfile=config["geno_dir"] + "/" + "ukb22418_c{chr}_b0_v2_s488243" + config["EXT"],
        sample_ids=config["sample_ids_dir"] + "/" + "{ancestry}_ids.txt"
    output:
        SNPLIST=config["snp_list_dir"] + "/" + "{ancestry}_filtered_all_chr{chr}.snplist"
    params:
        plink_executable = config["plink_executable"],
        THREADS=4,
        MAF=config["MAF"],
        GENO=config["GENO"],
        HWE=config["HWE"],
        MAC=config["MAC"],
        IPREFIX=config["geno_dir"]+ "/" + "ukb22418_c{chr}_b0_v2_s488243",
        OPREFIX="{ancestry}_filtered_all_chr{chr}",
        SNPDIR=config["snp_list_dir"]
    resources:
        cpus=4, mem_mb=20000, time_min=1440
    shell:
        """
        cd {params.SNPDIR}
        
        {params.plink_executable} \
        --bfile {params.IPREFIX} \
        --keep {input.sample_ids} \
        --maf {params.MAF} \
        --mac {params.MAC} \
        --geno {params.GENO} \
        --hwe {params.HWE} \
        --keep-allele-order \
        --threads {params.THREADS} \
        --write-snplist \
        --out {params.OPREFIX}
        """

# Step 1.5 Create Common SNP list across Ancestries

rule common_snps:
    input:
        expand(config["snp_list_dir"] + "/" + "{ancestry}_filtered_all_chr{chr}.snplist",ancestry=config["Ancestry"], chr=config["CHR"])
    output:
        config["common_snps_dir"] + "/" + "common_snps_all.txt"
    params:
        INPUTDIR=config["snp_list_dir"],
        SCRIPT=config["SCRIPT"] + "/" + "common_snps.R"
    resources: cpus=1, mem_mb=20000, time_min=1440
    shell:
        """
        ml R/4.1.2
        Rscript {params.SCRIPT} -d {params.INPUTDIR} -o {output}
        """

# # Rule Template

# rule Template:
#     input:
#     output:
#     params:
#     resources:
#     shell:
#         """
#         """

# # Step 2: Filtered CHR for Common snps

rule filtered_chr_common_snps:
    input:
        bfile=config["geno_dir"] + "/" + "ukb22418_c{chr}_b0_v2_s488243" + config["EXT"],
        common_snps=config["common_snps_dir"] + "/" + "common_snps_all.txt"
    output:
        CHR_filtered=config["filtered_chr_dir"] + "/" + "filtered_chr{chr}.bed"
    params:
        plink_executable = config["plink_executable"],
        GENO=config["GENO"],
        THREADS=4,
        IPREFIX=config["geno_dir"]+ "/" + "ukb22418_c{chr}_b0_v2_s488243",
        OPREFIX="filtered_chr{chr}",
        CHRDIR=config["filtered_chr_dir"]
    resources:
        cpus=4, mem_mb=20000, time_min=1440
    shell:
        """
        cd {params.CHRDIR}
        
        {params.plink_executable} \
        --bfile {params.IPREFIX} \
        --extract {input.common_snps} \
        --make-bed \
        --keep-allele-order \
        --threads {params.THREADS} \
        --out {params.OPREFIX}
        """

# # Step 2.5: Merged CHR for common snps
rule merge_chr_common_snps:
    input:
        bfile=expand(config["filtered_chr_dir"] + "/" + "filtered_chr{chr}.bed", chr=config["CHR"])
    output:
        merged_geno=config["filtered_chr_dir"] + "/" + "merged_geno_common_snps"
    params:
        plink_executable = config["plink_executable"],
        THREADS=4,
        IPREFIX=config["filtered_chr_dir"] + "/" + "filtered_chr{chr}.bed",
        OPREFIX="merged_geno_common_snps",
        CHRDIR=config["filtered_chr_dir"]
    resources:
        cpus=4, mem_mb=20000, time_min=1440
    shell:
        """
        cd {params.CHRDIR}
        
        {params.plink_executable} \
        --bfile {params.IPREFIX} \
        --merge-list {params.IPREFIX} \
        --make-bed \
        --keep-allele-order \
        --threads {params.THREADS} \
        --out {params.OPREFIX}
        """





#####old_snakemake####
# rule merge_filtered_genotypes_per_ancestry:
#     input:
#         expand("{out_dir}/{ancestry}_filtered_all_chr{chr}.snplist", out_dir=config["paths"]["snp_list_dir"], ancestry="{ancestry}", chr=range(1, 23)),
#         sample_ids=config["paths"]["sample_ids_dir"] + "/{ancestry}_sample_ids.txt"
#     output:
#         merged_geno="{out_dir}/{ancestry}_combined_genotypes_filtered_sampled_20240402.bed"
#     params:
#         plink_executable=config["paths"]["plink_executable"],
#         geno_dir=config["paths"]["geno_dir"],
#         snp_list_dir=config["paths"]["snp_list_dir"],
#         out_dir=config["paths"]["out_dir"]
#     resources:
#         cpus=config["resources"]["merge_genotypes"]["cpus"],
#         mem_mb=int(config["resources"]["merge_genotypes"]["mem_mb"].replace("G", "")) * 1024,
#         time=config["resources"]["merge_genotypes"]["time"],
#         partition=config["resources"]["merge_genotypes"]["partition"],
#         nodelist=config["resources"]["merge_genotypes"]["nodelist"]
#     shell:
#         """
#         MERGE_LIST={params.out_dir}/{ancestry}_merge_list_all_20240402.txt
#         > ${{MERGE_LIST}}  # Clear the merge list file content
        
#         for CHR in {{1..22}}; do
#             {params.plink_executable} --bfile {params.geno_dir}/ukb22418_c${{CHR}}_b0_v2_s488243 \
#                                       --keep {input.sample_ids} \
#                                       --extract {params.snp_list_dir}/{ancestry}_filtered_all_chr${{CHR}}.snplist \
#                                       --make-bed \
#                                       --keep-allele-order \
#                                       --threads {resources.cpus} \
#                                       --out {params.out_dir}/{ancestry}_chr${{CHR}}_filtered_all_20240402
#             if [ "${{CHR}}" -gt 1 ]; then
#                 echo "{params.out_dir}/{ancestry}_chr${{CHR}}_filtered_all_20240402.bed {params.out_dir}/{ancestry}_chr${{CHR}}_filtered_all_20240402.bim {params.out_dir}/{ancestry}_chr${{CHR}}_filtered_all_20240402.fam" >> ${{MERGE_LIST}}
#             fi
#         done
        
#         {params.plink_executable} --bfile {params.out_dir}/{ancestry}_chr1_filtered_all_20240402 \
#                                   --merge-list ${{MERGE_LIST}} \
#                                   --make-bed \
#                                   --keep-allele-order \
#                                   --threads {resources.cpus} \
#                                   --out {output.merged_geno}
#         """

# # Step 3: Prune and Create GRM for Each Ancestry
# rule grm_sampled_pruned_per_ancestry:
#     input:
#         merged_geno="{out_dir}/{ancestry}_combined_genotypes_filtered_sampled_20240402.bed",
#         sample_ids=config["paths"]["sample_ids_dir"] + "/{ancestry}_sample_ids.txt"
#     output:
#         grm="{out_dir}/{ancestry}_grm_sampled_pruned_20240402.bed"
#     params:
#         plink_executable=config["paths"]["plink_executable"],
#         out_dir=config["paths"]["out_dir"]
#     resources:
#         cpus=config["resources"]["grm_prune"]["cpus"],
#         mem_mb=int(config["resources"]["grm_prune"]["mem_mb"].replace("G", "")) * 1024,
#         time=config["resources"]["grm_prune"]["time"],
#         partition=config["resources"]["grm_prune"]["partition"],
#         nodelist=config["resources"]["grm_prune"]["nodelist"]
#     shell:
#         """
#         {params.plink_executable} --bfile {input.merged_geno} \
#                                   --keep {input.sample_ids} \
#                                   --keep-allele-order \
#                                   --rel-cutoff 0.05 \
#                                   --threads {resources.cpus} \
#                                   --out {output.grm}
#         """

